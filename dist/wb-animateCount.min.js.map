{
  "version": 3,
  "sources": ["../src/easings.ts", "../src/wb-animateCount.ts"],
  "sourcesContent": ["export const EasingFunctions = {\n  // no easing, no acceleration\n  linear: (t) => t,\n  // accelerating from zero velocity\n  easeInQuad: (t) => t * t,\n  // decelerating to zero velocity\n  easeOutQuad: (t) => t * (2 - t),\n  // acceleration until halfway, then deceleration\n  easeInOutQuad: (t) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t),\n  // accelerating from zero velocity\n  easeInCubic: (t) => t * t * t,\n  // decelerating to zero velocity\n  easeOutCubic: (t) => --t * t * t + 1,\n  // acceleration until halfway, then deceleration\n  easeInOutCubic: (t) =>\n    t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1,\n  // accelerating from zero velocity\n  easeInQuart: (t) => t * t * t * t,\n  // decelerating to zero velocity\n  easeOutQuart: (t) => 1 - --t * t * t * t,\n  // acceleration until halfway, then deceleration\n  easeInOutQuart: (t) =>\n    t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t,\n  // accelerating from zero velocity\n  easeInQuint: (t) => t * t * t * t * t,\n  // decelerating to zero velocity\n  easeOutQuint: (t) => 1 + --t * t * t * t * t,\n  // acceleration until halfway, then deceleration\n  easeInOutQuint: (t) =>\n    t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t,\n};\n", "import { EasingFunctions } from \"./easings\";\n\n/*\n\nREQUIRED\n[wb-data=\"animate-count\"]\n\nOPTIONAL\nthreshold\nduration // 0.0 to 1.0\nease\nreverse\n  countDownTo\n\n*/\n\nconst init = () => {\n  const elementsToAnimate = document.querySelectorAll(\n    '[wb-data=\"animate-count\"]'\n  );\n  if (elementsToAnimate.length === 0) {\n    console.error('No elements with attribute wb-data=\"animate-count\" found!');\n    return;\n  }\n  const observer = new IntersectionObserver(\n    (elementsToAnimate) => {\n      elementsToAnimate.forEach((el) => {\n        if (el.isIntersecting) {\n          // el is in view\n          countUp(el.target);\n          observer.unobserve(el.target);\n        } else {\n          // entry is out of view\n        }\n      });\n    },\n    {\n      threshold: 0, // 0 (default) - element must be totally offscreen, 0.5 - 50%, 1 - element fully on screen\n      rootMargin: \"0px\", // provides an offset\n      // root: null // specifiy the container, defaults to window\n    }\n  );\n  elementsToAnimate.forEach((el) => {\n    observer.observe(el);\n  });\n};\n\nconst countUp = (elementToAnimate) => {\n  const DEFAULT_DURATION = 2000; // duration in miliseconds\n  const FPS = 60; // i.e. 60 fps\n  const frameDuration = 1000 / FPS;\n  const duration = parseInt(\n    elementToAnimate.getAttribute(\"duration\") || DEFAULT_DURATION.toString(),\n    10\n  );\n  const totalFrames = Math.round(duration / frameDuration);\n  const easing =\n    elementToAnimate.getAttribute(\"ease\") || EasingFunctions.easeOutQuart;\n  const isCountDown = elementToAnimate.getAttribute(\"reverse\") || false;\n\n  let frame = 0;\n  let countTo = parseInt(elementToAnimate.textContent);\n\n  const counter = setInterval(() => {\n    frame++;\n    const progress = easing(frame / totalFrames); // 0 to 1\n\n    if (!isCountDown) {\n      let currentCount = Math.round(countTo * progress);\n      if (parseInt(elementToAnimate.textContent, 10) !== currentCount) {\n        elementToAnimate.textContent = currentCount;\n      }\n    } else {\n      let finalNumber =\n        parseInt(elementToAnimate.getAttribute(\"count-down-to\"), 10) || 0;\n      let currentCount = Math.round(countTo * (1 - progress));\n      if (parseInt(elementToAnimate.textContent, 10) !== finalNumber) {\n        elementToAnimate.textContent = currentCount;\n      }\n    }\n    if (frame === totalFrames) {\n      clearInterval(counter);\n    }\n  }, frameDuration);\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", init);\n"],
  "mappings": "MAAO,IAAMA,EAAkB,CAE7B,OAASC,GAAMA,EAEf,WAAaA,GAAMA,EAAIA,EAEvB,YAAcA,GAAMA,GAAK,EAAIA,GAE7B,cAAgBA,GAAOA,EAAI,GAAM,EAAIA,EAAIA,EAAI,IAAM,EAAI,EAAIA,GAAKA,EAEhE,YAAcA,GAAMA,EAAIA,EAAIA,EAE5B,aAAeA,GAAM,EAAEA,EAAIA,EAAIA,EAAI,EAEnC,eAAiBA,GACfA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,GAAKA,EAAI,IAAM,EAAIA,EAAI,IAAM,EAAIA,EAAI,GAAK,EAElE,YAAcA,GAAMA,EAAIA,EAAIA,EAAIA,EAEhC,aAAeA,GAAM,GAAI,EAAEA,EAAIA,EAAIA,EAAIA,EAEvC,eAAiBA,GACfA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,EAAI,EAAEA,EAAIA,EAAIA,EAAIA,EAEtD,YAAcA,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EAEpC,aAAeA,GAAM,EAAI,EAAEA,EAAIA,EAAIA,EAAIA,EAAIA,EAE3C,eAAiBA,GACfA,EAAI,GAAM,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,GAAK,EAAEA,EAAIA,EAAIA,EAAIA,EAAIA,CAClE,ECdA,IAAMC,EAAO,IAAM,CACjB,IAAMC,EAAoB,SAAS,iBACjC,2BACF,EACA,GAAIA,EAAkB,SAAW,EAAG,CAClC,QAAQ,MAAM,2DAA2D,EACzE,MACF,CACA,IAAMC,EAAW,IAAI,qBAClBD,GAAsB,CACrBA,EAAkB,QAASE,GAAO,CAC5BA,EAAG,iBAELC,EAAQD,EAAG,MAAM,EACjBD,EAAS,UAAUC,EAAG,MAAM,EAIhC,CAAC,CACH,EACA,CACE,UAAW,EACX,WAAY,KAEd,CACF,EACAF,EAAkB,QAASE,GAAO,CAChCD,EAAS,QAAQC,CAAE,CACrB,CAAC,CACH,EAEMC,EAAWC,GAAqB,CAGpC,IAAMC,EAAgB,mBAChBC,EAAW,SACfF,EAAiB,aAAa,UAAU,GAAK,KAAiB,SAAS,EACvE,EACF,EACMG,EAAc,KAAK,MAAMD,EAAWD,CAAa,EACjDG,EACJJ,EAAiB,aAAa,MAAM,GAAKK,EAAgB,aACrDC,EAAcN,EAAiB,aAAa,SAAS,GAAK,GAE5DO,EAAQ,EACRC,EAAU,SAASR,EAAiB,WAAW,EAE7CS,EAAU,YAAY,IAAM,CAChCF,IACA,IAAMG,EAAWN,EAAOG,EAAQJ,CAAW,EAE3C,GAAKG,EAKE,CACL,IAAIK,EACF,SAASX,EAAiB,aAAa,eAAe,EAAG,EAAE,GAAK,EAC9DY,EAAe,KAAK,MAAMJ,GAAW,EAAIE,EAAS,EAClD,SAASV,EAAiB,YAAa,EAAE,IAAMW,IACjDX,EAAiB,YAAcY,EAEnC,KAZkB,CAChB,IAAIA,EAAe,KAAK,MAAMJ,EAAUE,CAAQ,EAC5C,SAASV,EAAiB,YAAa,EAAE,IAAMY,IACjDZ,EAAiB,YAAcY,EAEnC,CAQIL,IAAUJ,GACZ,cAAcM,CAAO,CAEzB,EAAGR,CAAa,CAClB,EAEA,SAAS,iBAAiB,mBAAoBN,CAAI",
  "names": ["EasingFunctions", "t", "init", "elementsToAnimate", "observer", "el", "countUp", "elementToAnimate", "frameDuration", "duration", "totalFrames", "easing", "EasingFunctions", "isCountDown", "frame", "countTo", "counter", "progress", "finalNumber", "currentCount"]
}
